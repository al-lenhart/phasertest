<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Fairy Ring Collector</title>
  <script src="https://cdn.jsdelivr.net/npm/phaser@3.70.0/dist/phaser.min.js"></script>
</head>
<body>
<script>
const config = {
  type: Phaser.AUTO,
  width: 800,
  height: 600,
  physics: { default: 'arcade', arcade: { gravity: { y: 300 }, debug: false } },
  scene: { preload, create, update }
};

let player, rings, cursors, score = 0, scoreText, timerText, timedEvent;

function preload() {
  this.load.image('forest', 'https://labs.phaser.io/assets/skies/forest.png');
  this.load.image('ring', 'https://labs.phaser.io/assets/sprites/yellow_ball.png');
  this.load.image('fairy', 'https://labs.phaser.io/assets/sprites/phaser-dude.png'); // Placeholder
}

function create() {
  this.add.image(400, 300, 'forest');
  player = this.physics.add.sprite(100, 450, 'fairy').setCollideWorldBounds(true);

  rings = this.physics.add.group({
    key: 'ring',
    repeat: 9,
    setXY: { x: 120, y: 0, stepX: 70 }
  });

  rings.children.iterate(function (ring) {
    ring.setBounceY(Phaser.Math.FloatBetween(0.4, 0.8));
  });

  cursors = this.input.keyboard.createCursorKeys();

  scoreText = this.add.text(16, 16, 'Score: 0', { fontSize: '32px', fill: '#fff' });
  timerText = this.add.text(600, 16, 'Time: 30', { fontSize: '32px', fill: '#fff' });

  timedEvent = this.time.addEvent({ delay: 30000, callback: onEvent, callbackScope: this });

  this.physics.add.overlap(player, rings, collectRing, null, this);
}

function update() {
  if (cursors.left.isDown) {
    player.setVelocityX(-160);
  } else if (cursors.right.isDown) {
    player.setVelocityX(160);
  } else {
    player.setVelocityX(0);
  }
  if (cursors.up.isDown && player.body.touching.down) {
    player.setVelocityY(-330);
  }
  timerText.setText('Time: ' + Math.ceil((30000 - timedEvent.getElapsed()) / 1000));
}

function collectRing(player, ring) {
  ring.disableBody(true, true);
  score += 10;
  scoreText.setText('Score: ' + score);
  if (rings.countActive(true) === 0) {
    this.physics.pause();
    scoreText.setText('You Win!');
  }
}

function onEvent() {
  this.physics.pause();
  scoreText.setText('Time\'s Up!');
}

const game = new Phaser.Game(config);
</script>
</body>
</html>
